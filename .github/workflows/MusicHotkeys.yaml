name: Build MusicHotkeys

on:
  push:
    branches: [main, master]
  workflow_dispatch:

jobs:
  build-windows:
    runs-on: windows-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python 3.10
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flet pystray pillow keyboard pyautogui

    - name: Set UTF-8 environment
      run: |
        # Устанавливаем UTF-8 кодировку для всего
        echo "PYTHONIOENCODING=utf-8" >> $env:GITHUB_ENV
        echo "PYTHONUTF8=1" >> $env:GITHUB_ENV
        echo "FLEK_NO_EMOJI=1" >> $env:GITHUB_ENV

    - name: Create config files
      run: |
        # Создаем config.txt
        @("next=pageup", "prev=pagedown", "pause=home", "mute=end", "volume_down=ins", "volume_up=del") | Out-File -Encoding utf8 config.txt
        
        # Создаем flet.toml
        @('[project]', 'name = "musichotkeys"', 'version = "1.0.0"', 'dependencies = ["flet", "pystray", "pillow", "keyboard", "pyautogui"]', '', '[tool.flet]', 'product = "MusicHotkeys"', '', '[tool.flet.app]', 'path = "."') | Out-File -Encoding utf8 flet.toml

    - name: Build with disabled rich output
      run: |
        # Отключаем богатый вывод чтобы избежать ошибок Unicode
        $env:TERM = "dumb"
        $env:PYTHONIOENCODING = "utf-8"
        flet build windows --verbose 2>&1 | Write-Output

    - name: Check build result
      run: |
        # Проверяем различные возможные пути
        $possiblePaths = @(
            "build/windows/runner/Release/MusicHotkeys.exe",
            "build/MusicHotkeys.exe",
            "MusicHotkeys.exe"
        )
        
        $found = $false
        foreach ($path in $possiblePaths) {
            if (Test-Path $path) {
                Write-Output "✅ Found executable: $path"
                $size = (Get-Item $path).Length / 1MB
                Write-Output "Size: $([math]::Round($size, 2)) MB"
                $found = $true
                break
            }
        }
        
        if (-not $found) {
            Write-Output "❌ Executable not found. Directory contents:"
            Get-ChildItem -Recurse | Format-Table Name, Length
            exit 1
        }

    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: MusicHotkeys
        path: build/windows/runner/Release/MusicHotkeys.exe
