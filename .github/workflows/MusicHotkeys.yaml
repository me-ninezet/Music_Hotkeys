name: Build with Flet TOML

on:
  push:
    branches: [main, master]
  workflow_dispatch:

jobs:
  build-windows:
    runs-on: windows-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python 3.10
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'

    - name: Create proper flet.toml
      run: |
        @'
[project]
name = "musichotkeys"
version = "1.0.0"
description = "Music Hotkeys Controller"
requires-python = ">=3.9"
dependencies = [
    "flet",
    "pystray",
    "pillow",
    "keyboard",
    "pyautogui"
]

[tool.flet]
org = "com.musichotkeys"
product = "MusicHotkeys"
company = "Music Hotkeys"
copyright = "Copyright (C) 2025"

[tool.flet.app]
path = "."
'@ | Out-File -Encoding utf8 flet.toml

    - name: Create default config
      run: |
        echo "next=pageup" > config.txt
        echo "prev=pagedown" >> config.txt
        echo "pause=home" >> config.txt
        echo "mute=end" >> config.txt
        echo "volume_down=ins" >> config.txt
        echo "volume_up=del" >> config.txt

    - name: Install dependencies from toml
      run: |
        pip install flet pystray pillow keyboard pyautogui

    - name: Build with Flet
      run: |
        flet build windows

    - name: Check result
      run: |
        # Flet обычно создает папку с именем продукта
        if (Test-Path "build/windows/runner/Release/MusicHotkeys.exe") {
            $exePath = "build/windows/runner/Release/MusicHotkeys.exe"
            $size = (Get-Item $exePath).Length
            Write-Output "✅ SUCCESS! Executable: $exePath"
            Write-Output "Size: $($size/1MB) MB"
            
            # Копируем в dist для удобства
            New-Item -ItemType Directory -Path "dist" -Force
            Copy-Item -Path $exePath -Destination "dist/MusicHotkeys.exe"
        } else {
            Write-Output "❌ Checking build directory structure:"
            Get-ChildItem -Recurse -Filter "*.exe" | ForEach-Object { Write-Output "Found: $($_.FullName)" }
        }

    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: MusicHotkeys
        path: dist/
